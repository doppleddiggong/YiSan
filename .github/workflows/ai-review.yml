name: AI Code Review

on:
  push:
    paths:
      - 'Source/**'
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - 'Source/**'

permissions:
  contents: read
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 히스토리를 받아야 git diff 정확히 작동

      - name: Extract Diff
        id: diff
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "🔍 PR 기반 diff 생성 중..."
            git fetch origin ${{ github.base_ref }}
            git diff origin/${{ github.base_ref }}...HEAD > changes.patch
          else
            echo "🔍 Push 기반 diff 생성 중..."
            if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]; then
              echo "🆕 새 브랜치 푸시 → 전체 파일 diff"
              git diff 4b825dc642cb6eb9a060e54bf8d69288fbee4904 ${{ github.sha }} > changes.patch
            else
              git diff ${{ github.event.before }}..${{ github.sha }} > changes.patch
            fi
          fi

          echo "--- 변경된 코드 ---"
          cat changes.patch || echo "변경사항 없음"

      - name: Call GPT for Review
        id: ai_review
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          REVIEW=$(curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{
              \"model\": \"gpt-4o\",
              \"messages\": [
                {\"role\": \"system\", \"content\": \"You are a strict and pragmatic senior C++/C# code reviewer. Focus on performance, memory safety, const correctness, Unreal Engine coding conventions, and any possible bugs. Be concise and direct.\"},
                {\"role\": \"user\", \"content\": \"Review this code diff and suggest improvements:\\n$(cat changes.patch)\"}
              ]
            }" | jq -r '.choices[0].message.content')

          echo "$REVIEW" > review.txt
          echo "review_body=$REVIEW" >> $GITHUB_OUTPUT

      - name: Post PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "🤖 AI Code Review"
          message: ${{ steps.ai_review.outputs.review_body }}

      - name: Send Discord Notification
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          ESCAPED_REVIEW=$(echo "${{ steps.ai_review.outputs.review_body }}" | jq -Rs .)

          if [ "${{ github.event_name }}" == "pull_request" ]; then
            JSON_PAYLOAD=$(cat <<EOF
          {
            "username": "AI Reviewer 🤖",
            "embeds": [{
              "title": "AI Code Review on PR #${{ github.event.pull_request.number }}",
              "url": "${{ github.event.pull_request.html_url }}",
              "description": ${ESCAPED_REVIEW},
              "color": 5814783,
              "fields": [
                { "name": "🔀 Branch", "value": "${{ github.head_ref }} → ${{ github.base_ref }}", "inline": true },
                { "name": "🧠 Author", "value": "${{ github.event.pull_request.user.login }}", "inline": true }
              ],
              "footer": { "text": "Generated by GPT-4 via GitHub Actions" },
              "timestamp": "$(date --iso-8601=seconds)"
            }]
          }
EOF
            )
          else
            JSON_PAYLOAD=$(cat <<EOF
          {
            "username": "AI Reviewer 🤖",
            "embeds": [{
              "title": "AI Code Review on push to ${{ github.ref_name }}",
              "url": "${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}",
              "description": ${ESCAPED_REVIEW},
              "color": 5814783,
              "fields": [
                { "name": "🔀 Branch", "value": "${{ github.ref_name }}", "inline": true },
                { "name": "🧠 Author", "value": "${{ github.event.pusher.name }}", "inline": true }
              ],
              "footer": { "text": "Generated by GPT-4 via GitHub Actions" },
              "timestamp": "$(date --iso-8601=seconds)"
            }]
          }
EOF
            )
          fi

          curl -H "Content-Type: application/json" -X POST -d "$JSON_PAYLOAD" $DISCORD_WEBHOOK
